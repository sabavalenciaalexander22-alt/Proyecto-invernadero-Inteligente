{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppLayout.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft } from 'lucide-react';\n\ntype AppLayoutProps = {\n  children: ReactNode;\n  title: string;\n};\n\nexport default function AppLayout({ children, title }: AppLayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <header className=\"sticky top-0 z-10 bg-background/80 backdrop-blur-sm border-b\">\n        <div className=\"container mx-auto px-4 h-16 flex items-center\">\n          <Button variant=\"ghost\" size=\"icon\" asChild>\n            <Link href=\"/menu\">\n              <ChevronLeft className=\"h-6 w-6\" />\n              <span className=\"sr-only\">Volver al Men√∫</span>\n            </Link>\n          </Button>\n          <h1 className=\"text-xl font-bold font-headline ml-4\">{title}</h1>\n        </div>\n      </header>\n      <main className=\"container mx-auto p-4 md:p-8\">{children}</main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAOe,SAAS,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAkB;IACnE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAO,OAAO;sCACzC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACT,6LAAC,uNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;kDACvB,6LAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;;;;;;;;;;;;0BAG1D,6LAAC;gBAAK,WAAU;0BAAgC;;;;;;;;;;;;AAGtD;KAjBwB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/hooks/use-bluetooth.tsx"],"sourcesContent":["'use client';\n\nimport { create } from 'zustand';\n\nexport type SensorData = {\n  temperature: number;\n  humidity: number;\n  waterLevel: number;\n};\n\ntype BluetoothState = {\n  isConnected: boolean;\n  deviceName: string | null;\n  sensorData: SensorData;\n  connect: (device: BluetoothDevice, onData: (data: SensorData) => void) => Promise<void>;\n  disconnect: () => void;\n  setSensorData: (data: Partial<SensorData>) => void;\n};\n\nexport const useBluetoothStore = create<BluetoothState>((set, get) => ({\n  isConnected: false,\n  deviceName: null,\n  sensorData: {\n    temperature: 0,\n    humidity: 0,\n    waterLevel: 0,\n  },\n  connect: async (device, onData) => {\n    set({ deviceName: device.name, isConnected: true });\n    // This is where you would handle the GATT connection and characteristic notifications\n  },\n  disconnect: () => {\n    // This is where you would handle disconnection logic\n    set({ isConnected: false, deviceName: null });\n  },\n  setSensorData: (data) => {\n    set(state => ({ sensorData: { ...state.sensorData, ...data }}));\n  },\n}));\n"],"names":[],"mappings":";;;AAEA;AAFA;;AAmBO,MAAM,oBAAoB,CAAA,GAAA,2JAAA,CAAA,SAAM,AAAD,EAAkB,CAAC,KAAK,MAAQ,CAAC;QACrE,aAAa;QACb,YAAY;QACZ,YAAY;YACV,aAAa;YACb,UAAU;YACV,YAAY;QACd;QACA,SAAS,OAAO,QAAQ;YACtB,IAAI;gBAAE,YAAY,OAAO,IAAI;gBAAE,aAAa;YAAK;QACjD,sFAAsF;QACxF;QACA,YAAY;YACV,qDAAqD;YACrD,IAAI;gBAAE,aAAa;gBAAO,YAAY;YAAK;QAC7C;QACA,eAAe,CAAC;YACd,IAAI,CAAA,QAAS,CAAC;oBAAE,YAAY;wBAAE,GAAG,MAAM,UAAU;wBAAE,GAAG,IAAI;oBAAC;gBAAC,CAAC;QAC/D;IACF,CAAC","debugId":null}},
    {"offset": {"line": 219, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/status/page.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport { Thermometer, Droplets, Wind, WifiOff } from 'lucide-react';\nimport AppLayout from '@/components/layout/AppLayout';\nimport { useBluetoothStore } from '@/hooks/use-bluetooth';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\n\nconst StatusMetric = ({\n  icon: Icon,\n  value,\n  label,\n  unit,\n}: {\n  icon: React.ElementType;\n  value: string;\n  label: string;\n  unit: string;\n}) => (\n  <div className=\"flex flex-col items-center\">\n    <div className=\"flex items-center gap-1 text-white\">\n      <Icon className=\"w-4 h-4\" />\n      <span className=\"text-xl font-bold\">{value}{unit}</span>\n    </div>\n    <p className=\"text-xs text-white\">{label}</p>\n  </div>\n);\n\nconst DetailItem = ({ label, value }: { label:string; value: string | number }) => (\n  <div>\n    <p className=\"text-xs text-gray-500\">{label}</p>\n    <p className=\"font-bold text-gray-800\">{value}</p>\n  </div>\n);\n\nexport default function StatusPage() {\n\n  const { isConnected, sensorData } = useBluetoothStore();\n\n  if (!isConnected) {\n    return (\n      <AppLayout title=\"Estado de la Planta\">\n        <div className=\"flex flex-col items-center justify-center text-center h-full min-h-[60vh]\">\n            <Card className=\"max-w-md p-8\">\n              <CardHeader>\n                <div className=\"mx-auto bg-primary/20 text-primary p-3 rounded-full w-fit\">\n                  <WifiOff className=\"w-10 h-10\" />\n                </div>\n                <CardTitle>No hay conexi√≥n</CardTitle>\n                <CardDescription>\n                  Por favor, conecta tu dispositivo ESP32 a trav√©s de Bluetooth para ver los datos en tiempo real.\n                </CardDescription>\n              </CardHeader>\n              <CardContent>\n                <Link href=\"/bluetooth\">\n                    <Button>Ir a la p√°gina de conexi√≥n</Button>\n                </Link>\n              </CardContent>\n            </Card>\n        </div>\n      </AppLayout>\n    )\n  }\n\n\n  return (\n    <AppLayout title=\"Estado de la Planta\">\n      <div className=\"flex items-center justify-center p-4\">\n        <main className=\"relative z-10 w-full max-w-sm\">\n          <div className=\"w-full mx-auto bg-white rounded-3xl shadow-2xl overflow-hidden\">\n            <div className=\"p-6\">\n              <h1 className=\"text-center text-xl font-bold text-gray-800 mb-4\">\n                Estado Actual\n              </h1>\n\n              <div className=\"relative flex items-center\">\n                {/* Plant Image */}\n                <div className=\"w-1/2 pr-2 z-10 -mb-10\">\n                  <Image\n                    src=\"https://i.postimg.cc/NF8S5Tf6/Captura-de-pantalla-2025-07-28-193252-removebg-preview.png\"\n                    alt=\"Planta en maceta\"\n                    width={200}\n                    height={250}\n                    className=\"object-contain\"\n                    data-ai-hint=\"flower pot\"\n                  />\n                </div>\n\n                {/* Plant Details */}\n                <div className=\"w-1/2 space-y-2\">\n                  <DetailItem label=\"Nombre\" value=\"Chabela\" />\n                  <DetailItem label=\"Humedad\" value={`${sensorData.humidity}%`} />\n                  <DetailItem label=\"Fertilizante\" value=\"100%\" />\n                  <DetailItem label=\"Estado\" value=\"Buena\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Green Box */}\n            <div className=\"bg-green-600 text-white p-4 rounded-b-2xl\">\n              <h2 className=\"text-lg font-bold mb-4 text-center\">\n                Cuidemos las plantas\n              </h2>\n              <div className=\"flex justify-around\">\n                <StatusMetric\n                  icon={Thermometer}\n                  value={String(sensorData.temperature)}\n                  label=\"Temperatura\"\n                  unit=\"¬∞\"\n                />\n                <StatusMetric icon={Wind} value={String(sensorData.humidity)} label=\"Humedad\" unit=\"%\"/>\n                <StatusMetric icon={Droplets} value={String(sensorData.waterLevel)} label=\"Tanque\" unit=\"%\"/>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </AppLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}