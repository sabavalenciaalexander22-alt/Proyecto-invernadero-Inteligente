{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppLayout.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft } from 'lucide-react';\n\ntype AppLayoutProps = {\n  children: ReactNode;\n  title: string;\n};\n\nexport default function AppLayout({ children, title }: AppLayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <header className=\"sticky top-0 z-10 bg-background/80 backdrop-blur-sm border-b\">\n        <div className=\"container mx-auto px-4 h-16 flex items-center\">\n          <Button variant=\"ghost\" size=\"icon\" asChild>\n            <Link href=\"/menu\">\n              <ChevronLeft className=\"h-6 w-6\" />\n              <span className=\"sr-only\">Volver al Menú</span>\n            </Link>\n          </Button>\n          <h1 className=\"text-xl font-bold font-headline ml-4\">{title}</h1>\n        </div>\n      </header>\n      <main className=\"container mx-auto p-4 md:p-8\">{children}</main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAOe,SAAS,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAkB;IACnE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAO,OAAO;sCACzC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACT,6LAAC,uNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;kDACvB,6LAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;;;;;;;;;;;;0BAG1D,6LAAC;gBAAK,WAAU;0BAAgC;;;;;;;;;;;;AAGtD;KAjBwB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/chatbot.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A simple chatbot flow for the Smart Greenhouse app.\n *\n * - chat - A function that handles the chatbot conversation.\n * - ChatInput - The input type for the chat function.\n * - ChatOutput - The return type for the chat function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\n\nconst ChatInputSchema = z.object({\n  message: z.string().describe(\"The user's message to the chatbot.\"),\n});\nexport type ChatInput = z.infer<typeof ChatInputSchema>;\n\nconst ChatOutputSchema = z.object({\n  response: z.string().describe(\"The chatbot's response.\"),\n});\nexport type ChatOutput = z.infer<typeof ChatOutputSchema>;\n\nexport async function chat(input: ChatInput): Promise<ChatOutput> {\n  return chatFlow(input);\n}\n\nconst chatFlow = ai.defineFlow(\n  {\n    name: 'chatFlow',\n    inputSchema: ChatInputSchema,\n    outputSchema: ChatOutputSchema,\n  },\n  async (input) => {\n    const prompt = `Eres un asistente de chatbot para un invernadero inteligente. Tu propósito es responder preguntas relacionadas con el cuidado de las plantas y el estado del invernadero. Sé breve, amigable y directo.\n\nAquí tienes información clave para responder preguntas frecuentes:\n\n- **Sobre la humedad baja:** Si la humedad baja mucho, el ambiente se reseca. Esto puede hacer que la planta pierda agua rápidamente y se marchite. Es importante aumentar la humedad, por ejemplo, regando o pulverizando agua.\n- **Sobre la temperatura alta:** Una temperatura muy alta puede estresar a la planta, quemar sus hojas y detener su crecimiento. Es crucial ventilar el invernadero para bajar la temperatura.\n- **Sobre el estado de la planta:** Para saber si la planta está bien, revisa sus hojas (que no estén amarillas o caídas), el color del tallo y que la tierra esté húmeda pero no encharcada. Si todo eso está bien, la planta está saludable.\n- **Consejo general de cuidado:** Un buen consejo es observar la planta todos los días. Así puedes detectar cualquier cambio a tiempo. Asegúrate de que tenga suficiente luz, pero no sol directo todo el día, y mantén un buen equilibrio de riego.\n\nUtiliza esta información para responder.\n\nPregunta del usuario: \"${input.message}\"`;\n\n    const { text } = await ai.generate({\n      prompt: prompt,\n    });\n\n    return { response: text };\n  }\n);\n"],"names":[],"mappings":";;;;;;IAuBsB,OAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/avatar.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;;AAGb,OAAO,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,+BAA+B;QAC5C,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,WAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wEACA;QAED,GAAG,KAAK;;;;;;;AAGb,eAAe,WAAW,GAAG,qKAAA,CAAA,WAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chatbot/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport AppLayout from '@/components/layout/AppLayout';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Bot, Loader2, Send, User } from 'lucide-react';\nimport { chat } from '@/ai/flows/chatbot';\nimport { useToast } from '@/hooks/use-toast';\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar';\n\ntype Message = {\n  role: 'user' | 'bot';\n  content: string;\n};\n\nconst suggestedQuestions = [\n  '¿Qué pasa si la humedad baja mucho?',\n  '¿Qué pasa si la temperatura es alta?',\n  '¿Está bien la planta?',\n  'Dame un consejo para mejorar el cuidado de la planta.',\n];\n\nexport default function ChatbotPage() {\n  const [messages, setMessages] = useState<Message[]>([]);\n  const [input, setInput] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const { toast } = useToast();\n\n  const handleSend = async (messageContent?: string) => {\n    const content = messageContent || input;\n    if (content.trim() === '') return;\n\n    const userMessage: Message = { role: 'user', content };\n    setMessages((prev) => [...prev, userMessage]);\n    if (!messageContent) {\n      setInput('');\n    }\n    setIsLoading(true);\n\n    try {\n      const result = await chat({ message: content });\n      const botMessage: Message = { role: 'bot', content: result.response };\n      setMessages((prev) => [...prev, botMessage]);\n    } catch (error) {\n      console.error('Error getting chat response:', error);\n      toast({\n        title: 'Error',\n        description: 'No se pudo obtener una respuesta del chatbot.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <AppLayout title=\"Asistente Chatbot\">\n      <div className=\"flex flex-col h-[calc(100vh-12rem)] max-w-2xl mx-auto\">\n        {messages.length === 0 && (\n          <div className=\"flex flex-wrap justify-center gap-2 mb-4 animate-in fade-in\">\n            {suggestedQuestions.map((question, index) => (\n              <Button\n                key={index}\n                variant=\"outline\"\n                className=\"rounded-full\"\n                onClick={() => handleSend(question)}\n                disabled={isLoading}\n              >\n                {question}\n              </Button>\n            ))}\n          </div>\n        )}\n        <ScrollArea className=\"flex-1 p-4 border rounded-lg bg-card\">\n          <div className=\"space-y-4\">\n            {messages.map((message, index) => (\n              <div\n                key={index}\n                className={`flex items-start gap-3 ${\n                  message.role === 'user' ? 'justify-end' : ''\n                }`}\n              >\n                {message.role === 'bot' && (\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarFallback>\n                      <Bot />\n                    </AvatarFallback>\n                  </Avatar>\n                )}\n                <div\n                  className={`rounded-lg px-4 py-2 text-sm max-w-xs md:max-w-md ${\n                    message.role === 'user'\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted'\n                  }`}\n                >\n                  {message.content}\n                </div>\n                {message.role === 'user' && (\n                  <Avatar className=\"h-8 w-8\">\n                    <AvatarFallback>\n                      <User />\n                    </AvatarFallback>\n                  </Avatar>\n                )}\n              </div>\n            ))}\n            {isLoading && (\n              <div className=\"flex items-start gap-3\">\n                <Avatar className=\"h-8 w-8\">\n                  <AvatarFallback>\n                    <Bot />\n                  </AvatarFallback>\n                </Avatar>\n                <div className=\"rounded-lg px-4 py-2 text-sm bg-muted flex items-center\">\n                  <Loader2 className=\"h-5 w-5 animate-spin\" />\n                </div>\n              </div>\n            )}\n          </div>\n        </ScrollArea>\n        <div className=\"mt-4 flex items-center gap-2\">\n          <Input\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            onKeyDown={(e) =>\n              e.key === 'Enter' && !isLoading && handleSend()\n            }\n            placeholder=\"Escribe tu pregunta...\"\n            disabled={isLoading}\n          />\n          <Button onClick={() => handleSend()} disabled={isLoading}>\n            <Send className=\"h-4 w-4\" />\n          </Button>\n        </div>\n      </div>\n    </AppLayout>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}