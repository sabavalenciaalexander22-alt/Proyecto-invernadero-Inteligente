{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppLayout.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport Link from 'next/link';\nimport { Button } from '@/components/ui/button';\nimport { ChevronLeft } from 'lucide-react';\n\ntype AppLayoutProps = {\n  children: ReactNode;\n  title: string;\n};\n\nexport default function AppLayout({ children, title }: AppLayoutProps) {\n  return (\n    <div className=\"min-h-screen bg-background text-foreground\">\n      <header className=\"sticky top-0 z-10 bg-background/80 backdrop-blur-sm border-b\">\n        <div className=\"container mx-auto px-4 h-16 flex items-center\">\n          <Button variant=\"ghost\" size=\"icon\" asChild>\n            <Link href=\"/menu\">\n              <ChevronLeft className=\"h-6 w-6\" />\n              <span className=\"sr-only\">Volver al Menú</span>\n            </Link>\n          </Button>\n          <h1 className=\"text-xl font-bold font-headline ml-4\">{title}</h1>\n        </div>\n      </header>\n      <main className=\"container mx-auto p-4 md:p-8\">{children}</main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAOe,SAAS,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAkB;IACnE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAO,WAAU;0BAChB,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAQ,MAAK;4BAAO,OAAO;sCACzC,cAAA,6LAAC,+JAAA,CAAA,UAAI;gCAAC,MAAK;;kDACT,6LAAC,uNAAA,CAAA,cAAW;wCAAC,WAAU;;;;;;kDACvB,6LAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;sCAG9B,6LAAC;4BAAG,WAAU;sCAAwC;;;;;;;;;;;;;;;;;0BAG1D,6LAAC;gBAAK,WAAU;0BAAgC;;;;;;;;;;;;AAGtD;KAjBwB","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/status/page.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport { Thermometer, Droplets, Wind } from 'lucide-react';\nimport AppLayout from '@/components/layout/AppLayout';\n\nconst StatusMetric = ({\n  icon: Icon,\n  value,\n  label,\n  unit,\n}: {\n  icon: React.ElementType;\n  value: string;\n  label: string;\n  unit: string;\n}) => (\n  <div className=\"flex flex-col items-center\">\n    <div className=\"flex items-center gap-1 text-white\">\n      <Icon className=\"w-4 h-4\" />\n      <span className=\"text-xl font-bold\">{value}{unit}</span>\n    </div>\n    <p className=\"text-xs text-white\">{label}</p>\n  </div>\n);\n\nconst DetailItem = ({ label, value }: { label:string; value: string | number }) => (\n  <div>\n    <p className=\"text-xs text-gray-500\">{label}</p>\n    <p className=\"font-bold text-gray-800\">{value}</p>\n  </div>\n);\n\nexport default function StatusPage() {\n\n  const sensorData = {\n    temperature: 24,\n    humidity: 65,\n    waterLevel: 75,\n  }\n\n  return (\n    <AppLayout title=\"Estado de la Planta\">\n      <div className=\"flex items-center justify-center p-4\">\n        <main className=\"relative z-10 w-full max-w-sm\">\n          <div className=\"w-full mx-auto bg-white rounded-3xl shadow-2xl overflow-hidden\">\n            <div className=\"p-6\">\n              <h1 className=\"text-center text-xl font-bold text-gray-800 mb-4\">\n                Estado Actual\n              </h1>\n\n              <div className=\"relative flex items-center\">\n                {/* Plant Image */}\n                <div className=\"w-1/2 pr-2 z-10 -mb-10\">\n                  <Image\n                    src=\"https://i.postimg.cc/NF8S5Tf6/Captura-de-pantalla-2025-07-28-193252-removebg-preview.png\"\n                    alt=\"Planta en maceta\"\n                    width={200}\n                    height={250}\n                    className=\"object-contain\"\n                    data-ai-hint=\"flower pot\"\n                  />\n                </div>\n\n                {/* Plant Details */}\n                <div className=\"w-1/2 space-y-2\">\n                  <DetailItem label=\"Nombre\" value=\"Chabela\" />\n                  <DetailItem label=\"Humedad\" value={`${sensorData.humidity}%`} />\n                  <DetailItem label=\"Fertilizante\" value=\"100%\" />\n                  <DetailItem label=\"Estado\" value=\"Buena\" />\n                </div>\n              </div>\n            </div>\n\n            {/* Green Box */}\n            <div className=\"bg-green-600 text-white p-4 rounded-b-2xl\">\n              <h2 className=\"text-lg font-bold mb-4 text-center\">\n                Cuidemos las plantas\n              </h2>\n              <div className=\"flex justify-around\">\n                <StatusMetric\n                  icon={Thermometer}\n                  value={String(sensorData.temperature)}\n                  label=\"Temperatura\"\n                  unit=\"°\"\n                />\n                <StatusMetric icon={Wind} value={String(sensorData.humidity)} label=\"Humedad\" unit=\"%\"/>\n                <StatusMetric icon={Droplets} value={String(sensorData.waterLevel)} label=\"Tanque\" unit=\"%\"/>\n              </div>\n            </div>\n          </div>\n        </main>\n      </div>\n    </AppLayout>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AAAA;AAAA;AACA;AAJA;;;;;AAMA,MAAM,eAAe,CAAC,EACpB,MAAM,IAAI,EACV,KAAK,EACL,KAAK,EACL,IAAI,EAML,iBACC,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAK,WAAU;;;;;;kCAChB,6LAAC;wBAAK,WAAU;;4BAAqB;4BAAO;;;;;;;;;;;;;0BAE9C,6LAAC;gBAAE,WAAU;0BAAsB;;;;;;;;;;;;KAhBjC;AAoBN,MAAM,aAAa,CAAC,EAAE,KAAK,EAAE,KAAK,EAA4C,iBAC5E,6LAAC;;0BACC,6LAAC;gBAAE,WAAU;0BAAyB;;;;;;0BACtC,6LAAC;gBAAE,WAAU;0BAA2B;;;;;;;;;;;;MAHtC;AAOS,SAAS;IAEtB,MAAM,aAAa;QACjB,aAAa;QACb,UAAU;QACV,YAAY;IACd;IAEA,qBACE,6LAAC,4IAAA,CAAA,UAAS;QAAC,OAAM;kBACf,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAmD;;;;;;8CAIjE,6LAAC;oCAAI,WAAU;;sDAEb,6LAAC;4CAAI,WAAU;sDACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;gDACJ,KAAI;gDACJ,KAAI;gDACJ,OAAO;gDACP,QAAQ;gDACR,WAAU;gDACV,gBAAa;;;;;;;;;;;sDAKjB,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAW,OAAM;oDAAS,OAAM;;;;;;8DACjC,6LAAC;oDAAW,OAAM;oDAAU,OAAO,GAAG,WAAW,QAAQ,CAAC,CAAC,CAAC;;;;;;8DAC5D,6LAAC;oDAAW,OAAM;oDAAe,OAAM;;;;;;8DACvC,6LAAC;oDAAW,OAAM;oDAAS,OAAM;;;;;;;;;;;;;;;;;;;;;;;;sCAMvC,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAAqC;;;;;;8CAGnD,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CACC,MAAM,mNAAA,CAAA,cAAW;4CACjB,OAAO,OAAO,WAAW,WAAW;4CACpC,OAAM;4CACN,MAAK;;;;;;sDAEP,6LAAC;4CAAa,MAAM,qMAAA,CAAA,OAAI;4CAAE,OAAO,OAAO,WAAW,QAAQ;4CAAG,OAAM;4CAAU,MAAK;;;;;;sDACnF,6LAAC;4CAAa,MAAM,6MAAA,CAAA,WAAQ;4CAAE,OAAO,OAAO,WAAW,UAAU;4CAAG,OAAM;4CAAS,MAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQxG;MA9DwB","debugId":null}}]
}